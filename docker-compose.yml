version: '3.8'

services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sep
      MYSQL_USER: db
      MYSQL_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - db
    networks:
      - app_network

  php_app:
    build:
      context: ./php
      dockerfile: Dockerfile
    volumes:
      - ./php/src:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app_network
    environment:
      APP_NAME: Laravel
      APP_ENV: local
      APP_KEY: base64:hp1jTomgrolGJkuYqV7d74u30/+gg1HG4CXIzSJvlgA=
      APP_DEBUG: true
      APP_URL: http://localhost
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: sep
      DB_USERNAME: db
      DB_PASSWORD: root
      APP_TIMEZONE: UTC
      APP_LOCALE: en
      APP_FALLBACK_LOCALE: en
      APP_FAKER_LOCALE: en_US
      APP_MAINTENANCE_DRIVER: file
      PHP_CLI_SERVER_WORKERS: 4
      BCRYPT_ROUNDS: 12
      LOG_CHANNEL: stack
      LOG_STACK: single
      LOG_DEPRECATIONS_CHANNEL: null
      LOG_LEVEL: debug
      SESSION_DRIVER: database
      SESSION_LIFETIME: 120
      SESSION_ENCRYPT: false
      SESSION_PATH: /
      SESSION_DOMAIN: null
      BROADCAST_CONNECTION: log
      FILESYSTEM_DISK: local
      QUEUE_CONNECTION: database
      CACHE_STORE: database
      CACHE_PREFIX: ""
      MEMCACHED_HOST: 127.0.0.1
      REDIS_CLIENT: phpredis
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      MAIL_MAILER: log
      MAIL_HOST: 127.0.0.1
      MAIL_PORT: 2525
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
      MAIL_FROM_ADDRESS: "hello@example.com"
      MAIL_FROM_NAME: "${APP_NAME}"
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET: ""
      AWS_USE_PATH_STYLE_ENDPOINT: false
      VITE_APP_NAME: "${APP_NAME}"
      DESK_API_VERSION: "v2"
      DESK_API_KEY: "E9Y2LxT4g1hQZ7aD8nR3mWx5P0qK6pV7"
      DESK_API_ENDPOINT: "http://python_app:8080/api/v2"
    command: >
      bash -c "rm -f composer.lock 
      && composer require guzzlehttp/guzzle:^7.8 --with-all-dependencies --no-scripts
      && composer install --no-scripts
      && npm install
      && npm install -D tailwindcss@latest postcss@latest autoprefixer@latest
      && npx tailwindcss init -p
      && npm run build
      && mkdir -p storage/framework/views
      && mkdir -p storage/framework/cache
      && mkdir -p storage/framework/sessions
      && mkdir -p bootstrap/cache
      && chmod -R 775 storage bootstrap/cache
      && chown -R www-data:www-data storage bootstrap/cache
      && php artisan optimize:clear
      && php artisan serve --host=0.0.0.0 --port=8000"

  # Python Web Server
  python_app:
    build:
      context: ./python
      dockerfile: Dockerfile
    volumes:
      - ./python/src:/app
    ports:
      - "8080:8080"
    command: python3 main.py --port 8080
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  php_storage:
    driver: local